{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ReactPortfolio\\\\src\\\\components\\\\Experience.jsx\";\nimport React from \"react\";\nimport experience from \"./data/experience.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"EXPERIENCE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: experience.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-lg-4 col-12 d-flex flex-column align-items-center mb-4\",\n        \"data-aos\": \"zoom-in\",\n        \"data-aos-duration\": \"1000\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ex-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/assets/${data.imageSrc}`,\n              alt: \"\",\n              className: \"img-fluid\",\n              style: {\n                maxWidth: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: data.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"yellowgreen\"\n                },\n                children: [data.startDate, \" - \", data.endDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"yellow\"\n                },\n                children: data.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), data.experiences.map((exp, index) => /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: \"yellow\"\n              },\n              children: exp\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","experience","jsxDEV","_jsxDEV","Experience","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","src","imageSrc","alt","style","maxWidth","role","color","startDate","endDate","location","experiences","exp","index","_c","$RefreshReg$"],"sources":["D:/React/ReactPortfolio/src/components/Experience.jsx"],"sourcesContent":["import React from \"react\";\r\nimport experience from \"./data/experience.json\";\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <div className=\"container\" id=\"experience\">\r\n      <h1 className=\"my-4\">EXPERIENCE</h1>\r\n      <div className=\"row\">\r\n        {experience.map((data) => (\r\n          <div\r\n            key={data.id}\r\n            className=\"col-md-4 col-lg-4 col-12 d-flex flex-column align-items-center mb-4\"\r\n            data-aos=\"zoom-in\"\r\n            data-aos-duration=\"1000\"\r\n          >\r\n            <div className=\"ex-items\">\r\n              <div className=\"left mb-3\">\r\n                <img\r\n                  src={`/assets/${data.imageSrc}`}\r\n                  alt=\"\"\r\n                  className=\"img-fluid\"\r\n                  style={{ maxWidth: \"100px\" }}\r\n                />\r\n              </div>\r\n              <div className=\"right\">\r\n                <h2>{data.role}</h2>\r\n                <h4>\r\n                  <span style={{ color: \"yellowgreen\" }}>\r\n                    {data.startDate} - {data.endDate}\r\n                  </span>{\" \"}\r\n                  <span style={{ color: \"yellow\" }}>{data.location}</span>\r\n                </h4>\r\n                {data.experiences.map((exp, index) => (\r\n                  <h5 key={index} style={{ color: \"yellow\" }}>\r\n                    {exp}\r\n                  </h5>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}